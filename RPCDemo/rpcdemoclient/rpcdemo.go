// Code generated by goctl. DO NOT EDIT.
// Source: RPCDemo.proto

package rPCDemoClient

import (
	"context"

	"go-zero-demo/RPCDemo/rPCDemo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = rPCDemo.Request
	Response = rPCDemo.Response

	RPCDemo interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRPCDemo struct {
		cli zrpc.Client
	}
)

func NewRPCDemo(cli zrpc.Client) RPCDemo {
	return &defaultRPCDemo{
		cli: cli,
	}
}

func (m *defaultRPCDemo) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := rPCDemo.NewRPCDemoClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
