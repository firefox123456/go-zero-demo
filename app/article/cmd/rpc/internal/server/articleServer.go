// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package server

import (
	"context"

	"go-zero-demo/app/article/cmd/rpc/internal/logic"
	"go-zero-demo/app/article/cmd/rpc/internal/svc"
	"go-zero-demo/app/article/cmd/rpc/pb"
)

type ArticleServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedArticleServer
}

func NewArticleServer(svcCtx *svc.ServiceContext) *ArticleServer {
	return &ArticleServer{
		svcCtx: svcCtx,
	}
}

// -----------------------article-----------------------
func (s *ArticleServer) AddArticle(ctx context.Context, in *pb.AddArticleReq) (*pb.AddArticleResp, error) {
	l := logic.NewAddArticleLogic(ctx, s.svcCtx)
	return l.AddArticle(in)
}

func (s *ArticleServer) UpdateArticle(ctx context.Context, in *pb.UpdateArticleReq) (*pb.UpdateArticleResp, error) {
	l := logic.NewUpdateArticleLogic(ctx, s.svcCtx)
	return l.UpdateArticle(in)
}

func (s *ArticleServer) DelArticle(ctx context.Context, in *pb.DelArticleReq) (*pb.DelArticleResp, error) {
	l := logic.NewDelArticleLogic(ctx, s.svcCtx)
	return l.DelArticle(in)
}

func (s *ArticleServer) GetArticleById(ctx context.Context, in *pb.GetArticleByIdReq) (*pb.GetArticleByIdResp, error) {
	l := logic.NewGetArticleByIdLogic(ctx, s.svcCtx)
	return l.GetArticleById(in)
}

func (s *ArticleServer) SearchArticle(ctx context.Context, in *pb.SearchArticleReq) (*pb.SearchArticleResp, error) {
	l := logic.NewSearchArticleLogic(ctx, s.svcCtx)
	return l.SearchArticle(in)
}
